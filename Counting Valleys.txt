import java.io.*; 
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the countingValleys function below.
    static int countingValleys(int n, String s) 
    {
        int count = 0, sum = 0, l = s.length();
        boolean flag = false;
        //int index = s.indexOf('D');
        //System.out.println("Index = "+index);
        for(int i = 0; i < l; i++)
        {
            if(s.charAt(i) == 'D')
            {
                sum = sum - 1;
            }
            else
            {
                sum = sum + 1;
            }
            if(sum < 0)
            {
                flag = true;
            }
            if(flag && sum >= 0)
            {
                flag = false;
                count++;
            }   
        }
        return count;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        String s = scanner.nextLine();

        int result = countingValleys(n, s);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
